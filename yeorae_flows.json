[
    {
        "id": "ae8a03722a7d29f4",
        "type": "tab",
        "label": "플로우 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d5da3957d887dfdd",
        "type": "http in",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "url": "/mediapipe",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "62f4b7553207c39e",
                "48b3bc5455b87c99"
            ]
        ]
    },
    {
        "id": "ad1788326c35c06b",
        "type": "websocket in",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "server": "e9b870a1bbf9569d",
        "client": "",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "ece1cb22f2073982"
            ]
        ]
    },
    {
        "id": "d696fed314f24ffd",
        "type": "http in",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "url": "/monitor",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "263a39f1707ec243"
            ]
        ]
    },
    {
        "id": "c57c1b0ccfb41f29",
        "type": "http response",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 640,
        "wires": []
    },
    {
        "id": "07fffaa744f0f14a",
        "type": "socket-server",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "order": 0,
        "width": 6,
        "height": 6,
        "port": 1881,
        "x": 90,
        "y": 560,
        "wires": []
    },
    {
        "id": "71bbaf9f1539f48f",
        "type": "http response",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 520,
        "y": 220,
        "wires": []
    },
    {
        "id": "62f4b7553207c39e",
        "type": "mediapipe",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "order": 0,
        "width": 6,
        "height": 6,
        "isMirror": 1,
        "mirrorPort": 1881,
        "x": 340,
        "y": 220,
        "wires": [
            [
                "71bbaf9f1539f48f"
            ]
        ]
    },
    {
        "id": "263a39f1707ec243",
        "type": "monitor",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "order": 0,
        "width": 6,
        "height": 6,
        "mirrorPort": 1881,
        "x": 280,
        "y": 640,
        "wires": [
            [
                "c57c1b0ccfb41f29"
            ]
        ]
    },
    {
        "id": "242e5cee7b1da6aa",
        "type": "switch",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "property": "payload.regist",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 360,
        "wires": [
            [
                "b9556ad2e376727c"
            ],
            [
                "604b8b25e78ac865"
            ]
        ]
    },
    {
        "id": "ece1cb22f2073982",
        "type": "json",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 320,
        "y": 360,
        "wires": [
            [
                "242e5cee7b1da6aa"
            ]
        ]
    },
    {
        "id": "60224ee326ec9fef",
        "type": "pose-similarity",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "x": 990,
        "y": 340,
        "wires": [
            [
                "77f75a6a6b2aac12"
            ]
        ],
        "icon": "font-awesome/fa-male"
    },
    {
        "id": "b9556ad2e376727c",
        "type": "function",
        "z": "ae8a03722a7d29f4",
        "name": "Pose Similarity Function",
        "func": "// Now keypoints Data\nlet keypointsBuffer = flow.get('keypointsBuffer') || []\nconst bufferlength = 60\nkeypointsBuffer.push(msg.payload.poseLandmarks)\nif (keypointsBuffer.length > bufferlength) {\n        keypointsBuffer.shift()\n}\nflow.set('keypointsBuffer', keypointsBuffer)\n\n// Saved Keypoints Data\nconst registeredPoses = flow.get(\"registeredPoses\")\nlet savedKeypoints = {}\nfor (let i = 0; i < registeredPoses.length; i ++) {\n    savedKeypoints[registeredPoses[i].poseName] = registeredPoses[i].poseLandmarks\n}\n\nif (keypointsBuffer.length < bufferlength) {\n    msg.payload = {\n        inputKeypoints : [],\n        savedKeypoints : savedKeypoints\n    } \n} else {\n   msg.payload = {\n        inputKeypoints : keypointsBuffer,\n        savedKeypoints : savedKeypoints\n    } \n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 340,
        "wires": [
            [
                "60224ee326ec9fef"
            ]
        ]
    },
    {
        "id": "99fa187761574e17",
        "type": "debug",
        "z": "ae8a03722a7d29f4",
        "name": "Similarity Output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 420,
        "wires": []
    },
    {
        "id": "1497ba40488ae350",
        "type": "pose-similarity-register",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "x": 1000,
        "y": 460,
        "wires": [
            [
                "c08af529e605f899"
            ]
        ],
        "icon": "font-awesome/fa-registered"
    },
    {
        "id": "604b8b25e78ac865",
        "type": "function",
        "z": "ae8a03722a7d29f4",
        "name": "Pose Register Function",
        "func": "const registeredPoses = flow.get(\"registeredPoses\")\nlet savedKeypoints = {}\nfor (let i = 0; i < registeredPoses.length; i ++) {\n    savedKeypoints[registeredPoses[i].poseName] = registeredPoses[i].poseLandmarks\n}\n\nmsg.inputData = msg.payload \n\nmsg.payload = {\n    inputKeypoint : msg.payload.poseLandmarks,\n    savedKeypoints : savedKeypoints\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 460,
        "wires": [
            [
                "1497ba40488ae350"
            ]
        ]
    },
    {
        "id": "77f75a6a6b2aac12",
        "type": "function",
        "z": "ae8a03722a7d29f4",
        "name": "Buffer Reset",
        "func": "if (msg.payload.result != null) {\n    flow.set('keypointsBuffer', [])\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "0f20ca1ba9cd73f1"
            ]
        ]
    },
    {
        "id": "48b3bc5455b87c99",
        "type": "change",
        "z": "ae8a03722a7d29f4",
        "name": "Initialize",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "registeredPoses",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "9dcc889a026dfcdb"
            ]
        ]
    },
    {
        "id": "1dbef2ac231fd46f",
        "type": "function",
        "z": "ae8a03722a7d29f4",
        "name": "Array Setting",
        "func": "flow.set(\"registeredPoses\", msg.payload || []);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.payload = [];",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 100,
        "wires": [
            [
                "b55027b3ef0961c4"
            ]
        ]
    },
    {
        "id": "b55027b3ef0961c4",
        "type": "debug",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 100,
        "wires": []
    },
    {
        "id": "9dcc889a026dfcdb",
        "type": "mongodb in",
        "z": "ae8a03722a7d29f4",
        "mongodb": "1358ea9c6c074371",
        "name": "Pose Load",
        "collection": "pose",
        "operation": "find",
        "x": 560,
        "y": 100,
        "wires": [
            [
                "8123e96ff40ff338"
            ]
        ]
    },
    {
        "id": "8123e96ff40ff338",
        "type": "json",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 810,
        "y": 100,
        "wires": [
            [
                "1dbef2ac231fd46f"
            ]
        ]
    },
    {
        "id": "8c96d4f0f653844b",
        "type": "mongodb out",
        "z": "ae8a03722a7d29f4",
        "mongodb": "1358ea9c6c074371",
        "name": "Pose Save",
        "collection": "pose",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1650,
        "y": 620,
        "wires": []
    },
    {
        "id": "c08af529e605f899",
        "type": "switch",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "property": "payload.result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "eq",
                "v": "UnAccurate",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1190,
        "y": 460,
        "wires": [
            [
                "c0554a86dd34a284"
            ],
            [
                "fc340a3675f84afe"
            ],
            [
                "b018d440787123ad"
            ]
        ]
    },
    {
        "id": "b018d440787123ad",
        "type": "debug",
        "z": "ae8a03722a7d29f4",
        "name": " Already Exist",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 760,
        "wires": []
    },
    {
        "id": "c0554a86dd34a284",
        "type": "function",
        "z": "ae8a03722a7d29f4",
        "name": "Data Preprocess",
        "func": "registeredPoses = flow.get(\"registeredPoses\") || []\nregisteredPoses.push(msg.inputData)\nflow.set(\"registeredPoses\", registeredPoses)\n\nmsg.payload = msg.inputData\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 620,
        "wires": [
            [
                "8c96d4f0f653844b"
            ]
        ]
    },
    {
        "id": "fc340a3675f84afe",
        "type": "debug",
        "z": "ae8a03722a7d29f4",
        "name": "Unaccurate",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 680,
        "wires": []
    },
    {
        "id": "4ac96d6b1133b4fe",
        "type": "installed-device",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "alias": "token:a7a27a8d",
        "device": "",
        "devices": [
            "4d192f0d-596d-4654-a5fa-45cae8a95250",
            "5f9a4811-6ec1-4e4f-801b-b45c2aa87cda",
            "fc05f376-216c-36a0-c583-4c3e5d211fcb",
            "d3009ee6-bddf-5458-9160-1e0382da3184",
            "21242d0b-c555-144c-27f6-b00bef816007",
            "83024186-5f6d-8cc5-a54f-9eee02045142",
            "645ed6c4-156f-8ce1-bbd2-a2decf6be35b",
            "702ce8be-5a1f-3bfc-af25-c5648337aa08",
            "be821182-7452-40f7-84c8-a101aafbcadd",
            "77cbf87b-2b7b-b7bf-d602-4d4597941d2d",
            "1d88fbdb-d105-43bd-9b63-be4037b3c640",
            "a139fbe2-cc14-421e-8e49-b933a16ed120",
            "b5d536c2-4341-09e2-e138-836a9a9332c6",
            "c0a6fd54-bbae-4f75-a7d8-5dbea7785c52",
            "373209a7-6a6d-40ef-b5b7-5ebc7db1d87d",
            "2b3efe5e-c7b9-44c5-a462-de84612447a6",
            "2456412c-1b24-6ad5-a062-9675797961c2",
            "e6145123-0b1b-f70d-fa9e-61d7f794e965",
            "b01d02c5-ecd7-a826-dd7e-54f1d380c923",
            "446bf4d2-13bf-0427-3fc3-0330dd59700c",
            "eaeac12f-690b-3e6e-54b8-aa48d47f565c",
            "390f7a19-8fc2-831b-1bd3-cd49b6ed885e",
            "f0a25de1-3dd0-5ba4-15cd-e7af12221c6f",
            "9ea3f390-cb70-30a4-03e7-a445a635477c",
            "5285349b-5606-9640-104f-9ae3dd65c1ca",
            "1d7e30db-1939-d080-72a5-802b754db412",
            "d0e7d832-f069-f138-5463-0c64c378a67d",
            "ec58c60a-cd91-9b13-78dd-53b81c16af3b",
            "70e6e297-d012-e44b-0858-d0cc3184581d",
            "78872b97-92f6-0244-1568-025c6af8b2d4",
            "8ea60849-a7b8-d6cb-8e02-767e0d214706",
            "385ffa71-5a4b-565d-f3e5-1e3a1d0d1701",
            "461fc969-bbcd-c8f3-716d-3505ac30d8c4",
            "c776f294-98b0-632f-1658-1cfc6f39d2cb",
            "65d4878e-48f6-0b17-cac5-bd6ee4b95da8",
            "1ba0007f-d9ed-3f68-56f2-dfd3605424f9",
            "af896e1b-f48c-0d79-cb1e-f2b54ba3dff3",
            "e3535e1c-9992-e702-f257-b190f5a6b6d1"
        ],
        "profileId": "4ac96d6b1133b4fe",
        "x": 100,
        "y": 720,
        "wires": []
    },
    {
        "id": "0f20ca1ba9cd73f1",
        "type": "switch",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "property": "payload.result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "eq",
                "v": "up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "down",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1360,
        "y": 340,
        "wires": [
            [
                "d49451c43029bcad"
            ],
            [
                "6b2e16a20ee32204",
                "ca3b06fc3105b88c"
            ],
            [
                "1ccb0c1d88e44162",
                "1bc00c4b2445a6d7"
            ],
            [
                "99fa187761574e17"
            ]
        ]
    },
    {
        "id": "d49451c43029bcad",
        "type": "function",
        "z": "ae8a03722a7d29f4",
        "name": "None",
        "func": "// console.log(\"Wrong\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "6b2e16a20ee32204",
        "type": "command-device",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "alias": "on",
        "deviceNodeId": "4ac96d6b1133b4fe",
        "deviceType": "installed-device",
        "deviceId": "a139fbe2-cc14-421e-8e49-b933a16ed120",
        "componentId": "",
        "capabilityId": "switch_v1",
        "attributeId": "on",
        "rules": [
            {
                "capaId": "switch_v1",
                "attrId": "on",
                "args": []
            }
        ],
        "logging": false,
        "loggingEditor": false,
        "loggingConsole": false,
        "outputs": 1,
        "x": 1590,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "1ccb0c1d88e44162",
        "type": "command-device",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "alias": "off",
        "deviceNodeId": "4ac96d6b1133b4fe",
        "deviceType": "installed-device",
        "deviceId": "a139fbe2-cc14-421e-8e49-b933a16ed120",
        "componentId": "",
        "capabilityId": "switch_v1",
        "attributeId": "off",
        "rules": [
            {
                "capaId": "switch_v1",
                "attrId": "off",
                "args": []
            }
        ],
        "logging": false,
        "loggingEditor": false,
        "loggingConsole": false,
        "outputs": 1,
        "x": 1590,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ca3b06fc3105b88c",
        "type": "debug",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 300,
        "wires": []
    },
    {
        "id": "1bc00c4b2445a6d7",
        "type": "debug",
        "z": "ae8a03722a7d29f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 360,
        "wires": []
    },
    {
        "id": "e9b870a1bbf9569d",
        "type": "websocket-listener",
        "path": "/ws/data",
        "wholemsg": "false"
    },
    {
        "id": "1358ea9c6c074371",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "admin",
        "name": ""
    }
]